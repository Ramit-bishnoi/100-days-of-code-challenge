bool Solution::hotel(vector<int> &arrive, vector<int> &depart, int K) {
    vector<pair<int,int>>res;
    int currRoom = 0 , roomMax = 0 ;
    int n = arrive.size();
    
    for(int i = 0 ; i < n ; i++)
    {
        
        res.push_back(make_pair(arrive[i],2));
        res.push_back(make_pair(depart[i],1));
    }
    sort(res.begin(),res.end());
    
    //for(int i = 0 ; i < 2*n ; i++) cout << res[i].first <<" "<< res[i].second <<endl;
    for(int i = 0 ; i < 2*n ; i++)
    {
        if(res[i].second == 2)
        {
            currRoom++;
            roomMax = max(roomMax,currRoom);
        }
        else currRoom--;
    }
    return K >= roomMax;
    
    
}

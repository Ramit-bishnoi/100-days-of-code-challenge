#include <vector>
using namespace std;

vector<int> Solution::spiralOrder(const vector<vector<int> > &A) {
    int n = A.size();
    //if(n=0){return{};}
    int m = A[0].size();
    
    vector<int>result;
    result.reserve(n*m);
    
    int top = 0,bottom = n-1,left = 0,right = m-1 ;
    int dir = 0;
    
    
    while(top <= bottom && left <= right)
    {
        if(dir == 0){
            for(int i = left;i <= right;i++)
            {
                result.push_back(A[top][i]);
            }
            top++;
        }
        else if(dir == 1){
            for(int i = top;i <= bottom;i++)
            {
                result.push_back(A[i][right]);
            }
            right--;
        }
        else if(dir == 2){
            for(int i = right;i >= left;i--)
            {
                result.push_back(A[bottom][i]);
            }
            bottom--;
        }
        else if(dir == 3){
            for(int i = bottom;i >= top ;i--)
            {
                result.push_back(A[i][left]);
            }
            left++;
        }
        dir = (dir + 1)%4;      
    }
    return result;
    
}
